@use 'sass:math';

/**
 * Mixin for creating a flex container with customizable properties.
 * 
 * @param {String} $direction - The flex direction (default: row).
 * @param {String} $justify - The justify content property (default: flex-start).
 * @param {String} $align - The align items property (default: stretch).
 * @param {String} $wrap - The flex wrap property (default: nowrap).
 */
@mixin flex-container(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

/**
 * Mixin for creating media queries with customizable breakpoints.
 * 
 * @param {String} $breakpoint - The breakpoint for the media query.
 */
@mixin media($breakpoint) {
  @if $breakpoint == 'medium' {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $breakpoint == 'large' {
    @media (min-width: 1200px) {
      @content;
    }
  } @else if $breakpoint == 'xlarge' {
    @media (min-width: 1800px) {
      @content;
    }
  } @else {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

/**
 * Function for converting pixel values to rem units based on a base font size.
 * 
 * @param {Number} $px-value - The pixel value to convert.
 * @param {Number} $base-font-size - The base font size to use for conversion (default: 16px).
 * @return {String} - The converted rem value.
 * 
 * @example
 * .example-class {
 *   font-size: px-to-rem(32px); // Converts 32px to 2rem
 * }
 */
@function px-to-rem($px-value, $base-font-size: 16px) {
  @return #{math.div($px-value, $base-font-size)}rem;
}
